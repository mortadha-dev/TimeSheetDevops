pipeline {
    agent any
    
    environment { 
        registry = "maha96/timesheet"
        registryCredential = 'Docker' 
        dockerImage = '' 
    }

    stages {
        
     stage("Lancer les tests unitaires") {
      steps {
        script {
            bat "mvn test "
        }
       
   }}
    stage('package') {
            steps {
                bat 'mvn package'
            }
        }
        
        stage("publier le livrable sous nexus") {
            steps {
              
    
        nexusArtifactUploader artifacts:[
            
            [
                artifactId: 'Timesheet-spring-boot-core-data-jpa-mvc-REST-1',
                classifier: '', 
                file: 'target/Timesheet-spring-boot-core-data-jpa-mvc-REST-1-0.0.1-SNAPSHOT.jar', 
                type: 'jar'
                ]
            ],
            
            credentialsId: 'nexus',
            groupId: 'tn.esprit.spring', 
            nexusUrl: 'localhost:8081',
            nexusVersion: 'nexus3',
            protocol: 'http',
            repository: 'devops1',
            version: '0.0.1-SNAPSHOT'
                   
                
            }
        }
        stage('SonarQube') {
           steps {
          
                    withSonarQubeEnv('sonar') 
                      {
                              bat 'mvn sonar:sonar'
                      }
                  }
        }
        stage('Cr√©er notre image docker') {
            steps { 
                script { 
                    dockerImage = docker.build registry + ":$BUILD_NUMBER" 
                }
            } 
        }
        stage ('push image'){
            steps{
                bat 'mvn push image docker'
        
            }
        }
        
   
   }}
